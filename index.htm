<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Mini App</title>
    <style>
      body {
        margin: 0;
        padding: 1em;
        background-color: white;
      }
      
      [data-cart-info],
      [data-credit-card] {
        transform: scale(0.78);
    	margin-left: -3.4em;
      }
      
      [data-cart-info] span{
        display: inline-block;
        vertical-align: middle;
      }

      [data-cc-info] input:focus,
      [data-cc-digits] input:focus {
        outline: none;
      }

      .mdc-card__primary-action,
      .mdc-card__primary-action:hover {
        cursor: auto;
        padding: 20px;
        min-height: inherit;
      }
      
      [data-credit-card] [data-card-type] {
        transition: width 1.5s;
        margin-left: calc(100% - 130px);
      }

      .is-visa {
        background: linear-gradient(135deg, #622774 0%, #c53364 100%);
      }

      .is-mastercard {
        background: linear-gradient(135deg, #65799b 0%, #5e2563 100%);
      }

      .is-visa [data-card-type],
      .is-mastercard [data-card-type] {
        width: auto;
      }

      input.is-invalid,
      .is-invalid input {
        text-decoration: line-through;
      }

      ::placeholder {
        color: #fff;
      }
      
      .material-icons{
        font-size: 150px;
      }
      
      [data-credit-card]{
        width: 435px;
        min-height: 240px;
        border-radius: 10px;
        background-color: #5d6874;
      }
      
      [data-card-type]{
        display: block;
        width: 120px;
        height: 60px;
      }
      
      [data-cc-digits]{
        margin-top: 2em;
      }
      
      [data-cc-digits] input{
        color: white;
        font-size: 2em;
        line-height: 2em;
        border: none;
        margin-right: 0.5em;
        background: none;
      }
      
      [data-cc-info]{
        margin-top: 1em;
      }
      
      [data-cc-info] input{
        color: white;
        font-size: 1.2em;
        border: none;
        background: none;
      }
      
      [data-cc-info] input:nth-child(2){
        padding-right: 10px;
        float: right;
      }
      
      [data-pay-btn]{
        position: fixed;
        width: 90%;
        border: 1px solid;
        bottom: 20px;
      }
    </style>
  </head>
  <body>
    <div data-cart-info>
      <h1 class="mdc-typography--headline4"><span class="material-icons">shopping_cart</span><span data-bill></span></h1>
    </div>
    <div data-credit-card class="mdc-card mdc-card-outlined">
      <div class="mdc-card__primary-action">
        <img data-card-type src="http://placehold.it/120x60.png?text=Card">
        <div data-cc-digits>
          <input type="text" placeholder="----" size="4">
          <input type="text" placeholder="----" size="4">
          <input type="text" placeholder="----" size="4">
          <input type="text" placeholder="----" size="4">
        </div>
        <div data-cc-info>
          <input type="text" size="20" placeholder="Name Surname">
          <input type="text" size="6" placeholder="MM/YY">
        </div>
      </div>
    </div>
    <button class="mdc-button" data-pay-btn>Pay & Checkout Now</button>
    <script>
      const appState = {
        //hold data for the app
      };
      
      const formatAsMoney = (amount, buyerCountry)=>{
        //use the param to format the user's bill as a proper currency
        const options = {
          style: "currency",
          currency: "USD"
        };
        countries.forEach(countryInfo => {
          if(countryInfo.country == buyerCountry){
            options.currency = countryInfo.currency;
            return amount.toLocaleString(countryInfo.code, options);
          }          
        });
        return amount.toLocaleString('en-US', options);
      };
      
      const flagIfInvalid = (field, isValid)=>{
        
        if(isValid){
          //remove is-valid class from field
          field.removeAttribute('class');
        }else{
          field.setAttribute('class', 'is-invalid');
        }
      };      
      
      const expiryDateFormatIsValid = (target)=>{
        //test expiry date of card
        let expDate = target.value.split('/');
        
        return (expDate[0].length == 2 && expDate[1].length==2 && 0<expDate[0] && expDate[0]<=12);   
      
      };
      
      const detectCardType = ({target})=>{
		//visa start with 4 mastercard with 5
        if(target.value.charAt(0) == 4){
          //remove is-master and add is-visa to data-credit-card         
          document.querySelector('[data-card-type]').setAttribute('class', 'is-visa');
          document.querySelector('[data-card-type]').setAttribute('src', supportedCards.visa);
          
        }else if(target.value.charAt(0) == 5){
          //remove is-visa and add is-mastercard
          //set src of data-card-type Img using the data urls in supportedCards         
          document.querySelector('[data-card-type]').setAttribute('class', 'is-mastercard');
          document.querySelector('[data-card-type]').setAttribute('src', supportedCards.mastercard);
        }else{
          document.querySelector('[data-card-type]').setAttribute('class', '');
          document.querySelector('[data-card-type]').setAttribute('src', 'http://placehold.it/120x60.png?text=Card')
        }
      };

      const validateCardExpiryDate = ({target})=>{
        //see detectedCardType
        
        let isValidDate = expiryDateFormatIsValid(target);
        const date = new Date();
        let expDate = target.value.split('/');
        isValidDate = expDate[0]>=(date.getMonth()+1) && expDate[1]>=(date.getFullYear()-2000);
        flagIfInvalid(target, isValidDate);
        return isValidDate;        
      };

      const validateCardHolderName = ({target})=>{
        //see detectedCardType
        const name = target.value.split(' ');
        if(name[0].length >=3 && name[1].length>=3){
          flagIfInvalid(target, true);
          return true;
        }else{
          flagIfInvalid(target, false);
          return false;
        }
      };
      
      const validateCardNumber = () =>{
        
      };
      
      const uiCanInteract = ()=>{
       const elem1 = document.querySelector('[data-cc-digits] input:nth-child(1)');
       const target = {
         target: elem1,
       };
       elem1.addEventListener('blur', (e)=>{
         detectCardType(target)
       });
        
       const elem2 = document.querySelector('[data-cc-info] input:nth-child(1)')
       const target1 = {
         target: elem2,
       };
       elem2.addEventListener('blur', (e)=>{
         validateCardHolderName(target1);
       });
        
       const elem3 = document.querySelector('[data-cc-info] input:nth-child(2)')
       const target2 = {
         target: elem3,
       };
       elem3.addEventListener('blur', (e)=>{
         validateCardExpiryDate(target2);
       });
        
       const elem4 = document.querySelector('[data-pay-btn]')
       elem4.addEventListener('click', validateCardNumber);
        
       document.querySelector('[data-cc-digits] input:nth-child(1)').focus();
        
      };
      
      const displayCartTotal = ({results})=>{       
        const [data] = results;
        const {itemsInCart,buyerCountry} = data;
        appState.items = itemsInCart;
        appState.country = buyerCountry;
        
        appState.bill = itemsInCart.reduce((accumulator, currentValue)=>{
          return (accumulator.qty * accumulator.price) + (currentValue.qty*currentValue.price);          
        });
        appState.billFormated = formatAsMoney(appState.bill, appState.country);
        document.querySelector('[data-bill]').textContent = appState.billFormated;
        uiCanInteract();
      };
      
      const fetchBill = ()=>{
       
        const api = 'https://randomapi.com/api/006b08a801d82d0c9824dcfdfdfa3b3c';
        
        fetch(api).then(response=>{          
          return response.json();
        }).then( data => {
          displayCartTotal(data);          
        }).catch(error=>{
          console.error(error);
        });
      };
      
      const supportedCards = {
        visa: "http://placehold.it/120x60.png?text=visa", 
        mastercard: "http://placehold.it/120x60.png?text=mastercard"
      };
      
      const countries = [
        {
          code: "US",
          currency: "USD",
          country: 'United States'
        },
        {
          code: "NG",
          currency: "NGN",
          country: 'Nigeria'
        },
        {
          code: 'KE',
          currency: 'KES',
          country: 'Kenya'
        },
        {
          code: 'UG',
          currency: 'UGX',
          country: 'Uganda'
        },
        {
          code: 'RW',
          currency: 'RWF',
          country: 'Rwanda'
        },
        {
          code: 'TZ',
          currency: 'TZS',
          country: 'Tanzania'
        },
        {
          code: 'ZA',
          currency: 'ZAR',
          country: 'South Africa'
        },
        {
          code: 'CM',
          currency: 'XAF',
          country: 'Cameroon'
        },
        {
          code: 'GH',
          currency: 'GHS',
          country: 'Ghana'
        }
      ];
      
      const startApp = () => {
        fetchBill();
        
      };

      startApp();
    </script>
  </body>
</html>
